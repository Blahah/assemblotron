#!/usr/bin/env ruby

require 'trollop'
require 'assemblotron'
require 'chronic_duration'

# path for auto-installed assemblers - only takes effect
# for subshells of this process
ENV['PATH'] = "#{ENV['HOME']}/.local/bin:#{ENV['PATH']}"

# global option parsing
parser = Trollop::Parser.new do
  banner <<-EOS
#{Assemblotron::Controller.header}

An automated transcriptome assembly optimiser

Usage:
  atron --left left.fq --right right.fq [options]

Options:
EOS
  opt :left,
      "Path to left reads (in FASTQ or gzipped FASTQ)",
      :short => "-l",
      :type => String

  opt :right,
      "Path to right reads (in FASTQ or gzipped FASTQ)",
      :short => "-r",
      :type => String

  opt :insert_size,
      "Mean insert size",
      :default => 200

  opt :insert_sd,
      "Insert size standard deviation",
      :default => 80

  opt :threads,
      "Number of threads to use",
      :short => "-t",
      :default => 4

  opt :memlimit,
      "Maximum amount of RAM to use in GB (note, not all assemblers " +
      "respect this setting)",
      :short => "-m",
      :default => 2

  opt :timelimit,
      "Time limit for the optimisation. If the " +
      "run hasn't converged in this time, the best result " +
      "achieved so far will be returned. (e.g. 20h or 16m30s)",
      :default => nil,
      :type => String

  opt :subsample_size, "number of reads to use for optimisation",
      :default => 100_000

  opt :assemblers, "assemblers to use as comma separated list of names " +
      "or shortnames - see --list-assemblers", :default => 'all'

  opt :optimiser, "optimiser to use [tabu or sweep]", :default => 'tabu'

  opt :skip_subsample, "skip subsampling step", :default => false

  opt :skip_final, "skip final assembly step", :default => false

  opt :output_parameters,
      "file to which optimal parameters will be written",
      :default => "optimal_parameters.json"

  opt :optimal_parameters,
      "JSON file containing optimal parameters to use. If " +
      "this option is chosen, Assemblotron skips to the final assembly",
      :type => String

  opt :keep_intermediates,
      "Keep intermediate files produced during during optimisation.",
      :default => false

  opt :gzip_intermediates,
      "gzip intermediate files (onlys takes effect if " +
      "--keep-intermediates is on)",
      :default => false

  opt :list_assemblers,
      "print a list of the available assemblers"

  opt :install_assemblers,
      "install an assembler by name or shortname (use 'all' to install " +
      "all available)",
      :type => String

  opt :logfile, "write logs to file", :type => String

  opt :quiet, "Don't print any logs", :default => false

  opt :verbose, "Print extra information", :default => false

  opt :visualise, "Produce visualisations of the run", :default => false
end

options = Trollop::with_standard_exception_handling parser do
  raise Trollop::HelpNeeded if ARGV.empty? # show help screen
  parser.parse ARGV
end

if !(options[:timelimit].nil?)
  ChronicDuration.raise_exceptions = true
  options[:timelimit] = ChronicDuration.parse(options[:timelimit]);
end

Assemblotron::Controller.new(options).run
