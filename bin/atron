#!/usr/bin/env ruby

require 'trollop'
require 'assemblotron'

controller = Assemblotron::Controller.new

# global option parsing
SUB_COMMANDS = %w(list run) + controller.assemblers
assembler_cmd_list = controller.assemblers.map{ |name|
  "#{name} - show options for #{name}"
  }.join("\n")
parser = Trollop::Parser.new do
  banner <<-EOS
Assemblotron: fast, automated, optimal transcriptome assembly

Usage:
  atron [global options] [command] [command-specific options]

Commands:

list        - list the available assemblers
run         - run optimisation for an assembler
<assembler> - show options for assembler

Global options:
EOS
  opt :threads, "Number of threads to use", 
                :short => "-t", 
                :default => 4
  opt :memlimit, "Maximum amount of RAM to use in GB (note, not all assemblers respect this setting)",
                :short => "-m",
                :default => 2
  opt :timelimit, "Time limit for the optimisation in hours. If the run hasn't converged in this time, the best result achieved so far will be returned.",
                :short => "-l",
                :default => nil,
                :type => Float
  opt :keep_intermediates, "Keep intermediate files produced during during optimisation."
  opt :gzip_intermediates, "gzip intermediate files (onlys takes effect if --keep-intermediates is on)"
  opt :logfile, "write logs to file",
                :type => String
  opt :quiet, "Don't print any logs"
  opt :verbose, "Print extra information"
  opt :visualise, "Produce visualisations of the run"
  stop_on SUB_COMMANDS
end

global_opts = Trollop::with_standard_exception_handling parser do
  parser.parse ARGV
  raise Trollop::HelpNeeded if ARGV.empty? # show help screen
end

# subcommand parsing
cmd = ARGV.shift
assembler = nil
if cmd.nil?
  opts 
elsif cmd == "list"
  controller.list_assemblers
elsif cmd == "run"
  assembler = ARGV.shift
elsif controller.assemblers.include?(cmd)
  controller.options_for_assembler cmd
else
  Trollop::die "unknown subcommand #{cmd.inspect}"
end

# run command
controller.global_opts = global_opts
controller.run assembler